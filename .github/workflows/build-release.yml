name: build-release
permissions:
  contents: write
  pull-requests: write
on:
  schedule:
    - cron: "* 23 * * 5"
  workflow_dispatch: null
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: tgymnich/fork-sync@v1.8
        with:
          owner: Cryafonic
          base: main
          head: main
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        build_type:
          - RelWithDebInfo
        enable_ui:
          - off
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: turtlesec-no/get-ninja@main
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Workaround for windows-2022 and cmake 3.25.0
        shell: bash
        run: rm -rf C:/Strawberry/
      - name: Create skia folder
        shell: bash
        run: mkdir C:\deps\skia
      # - name: Download Latest Release Zip             
      #   uses: creesch/github-latest-release-zip@v0.1.1
      #   with:
      #     owner: aseprite
      #     repo: skia
      #     downloadPath: C:\deps\skia
      - name: Download a file
      - uses: carlosperate/download-file-action@v2
        id: download-file
        with:
            file-url: 'https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip'
            file-name: 'Skia-Windows-Release-x64.zip'
            location: 'C:\deps\skia'
      - name: Unzip Skia folder
        run: |
          Expand-Archive -Path C:\deps\skia\Skia-Windows-Release-x64.zip -DestinationPath C:\deps\skia
          ls C:\deps\skia
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Generating Makefiles
        shell: bash
        run: |
          cmake -DLAF_BACKEND=skia -DSKIA_DIR=C:\deps\skia\Skia-Windows-Release-x64 -DSKIA_LIBRARY_DIR=C:\deps\skia\Skia-Windows-Release-x64\out\Release-x64 -DSKIA_LIBRARY=C:\deps\skia\Skia-Windows-Release-x64\out\Release-x64\skia.lib -G Ninja ..
      - name: Compiling
        shell: bash
        run: |
          cd build && ninja aseprite
      - name: Create zip file
        run: |
          Compress-Archive -Path build/* -Destination aseprite_zipped.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.repository }}
          draft: false
          prerelease: false
          body: Download aseprite.zip, unzip and inside the bin folder find aseprite.exe
            and open it. Enjoy!
      - name: Upload release assest (.zap)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aseprite_zipped.zip
          asset_name: aseprite.zip
          asset_content_type: application/zip
